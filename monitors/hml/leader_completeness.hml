with
    proc_lib:init_p(_,_,_,_,[_,_,_,{local, Supervisor},_,_,_]) when Supervisor =:= 'Elixir.Graft.Supervisor'
monitor
    and([_LauncherPid <- _SupervisorPid, proc_lib:init_p(_,_,_,_,_)] 
        max(INIT_LOOP.
            and(
                [_P -> _C, proc_lib:init_p(_,_,_,_,_)]INIT_LOOP,
                [_P <- _C, proc_lib:init_p(_,_,_,_,_)]INIT_LOOP,
                [_Server ? {ack, _, {ok, _}}]INIT_LOOP,
                [_Server ? {_, start}] max(START. %%% START([{0,0,nil}]) 
                    and(
                        [Leader ! {_, {aerpc, bad_log}}] ff,
                        [Leader ! {_, {aerpc, commit_index}}] max(X. %%% X(CommittedLog) when leader_log does not contain CommittedLog -> ff 
                            and(
                                [Server ** _ when Server =:= Leader] START, %%% START(CommittedLog)
                                [_P -> _C, proc_lib:init_p(_,_,_,_,_)] X,
                                [_P <- _C, proc_lib:init_p(_,_,_,_,_)] X,
                                [_Server ! _] X,
                                [_Server ? _] X,
                                [_Server ** _] X
                            )
                        ),
                        [_P -> _C, proc_lib:init_p(_,_,_,_,_)] START,
                        [_P <- _C, proc_lib:init_p(_,_,_,_,_)] START,
                        [_Server ? _] START,
                        [_Server ! _] START,
                        [_Server ** _] START
                    )
                )
            )
        )
    ).